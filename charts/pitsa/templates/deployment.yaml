apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pitsa.fullname" . }}
  labels:
    {{- include "pitsa.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pitsa.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 16 | quote }}
        kubectl.kubernetes.io/default-container: "{{ .Chart.Name }}"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pitsa.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pitsa.serviceAccountName" . }}
      securityContext:
        fsGroup: 0
      containers:
        # Local NTP server side-car container.
        {{- if .Values.ntp.enabled }}
        - name: {{ .Chart.Name }}-chrony
          securityContext:
            capabilities:
              drop:
              # Do not allow chrony to modify the system time (it shouldn't even try')
              # See https://man7.org/linux/man-pages/man7/capabilities.7.html
              - SYS_TIME
            readOnlyRootFilesystem: true
          image: "{{ .Values.ntp.image.repository }}:{{ .Values.ntp.image.tag }}"
          imagePullPolicy: {{ .Values.ntp.image.pullPolicy }}
          ports:
            - name: tsp
              containerPort: 123
              protocol: UDP
          env:
          - name: NTP_SERVERS
            value: "{{ .Values.ntp.config.servers }}"
          - name: ENABLE_NTS
            value: "{{ .Values.ntp.config.nts }}"
          - name: NOCLIENTLOG
            value: "true"
          volumeMounts:
          - mountPath: /etc/chrony
            name: tmpfs-etc-chrony
          - mountPath: /run/chrony
            name: tmpfs-run-chrony
          - mountPath: /var/lib/chrony
            name: tmpfs-var-lib-chrony
        {{- end }}
        # PiTSA app
        - name: {{ .Chart.Name }}
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsNonRoot: true
            privileged: false
            allowPrivilegeEscalation: false
            # Using https://github.com/mydriatech/the-ground-up requires write permission.
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 10001
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          - name: PITSA_API_PORT
            value: "{{ .Values.service.port }}"
          - name: PITSA_TIME_NTPHOST
            value: "{{ .Values.app.time.ntpHost }}"
          - name: PITSA_TIME_TIMEOUT
            value: "{{ .Values.app.time.ntpTimeoutMicros }}"
          - name: PITSA_TIME_ACCURACY
            value: "{{ .Values.app.time.systemTimeAccuracyMicros }}"
          - name: PITSA_TIME_INTERVAL
            value: "{{ .Values.app.time.ntpSyncIntervalMicros }}"
          - name: PITSA_TIME_TOLERANCE
            value: "{{ .Values.app.time.tolerableAccuracyMicros }}"
          - name: PITSA_TIME_ALWAYS
            value: "{{ .Values.app.time.ntpQueryForEveryRequest }}"
          - name: PITSA_SIGN_POLICY
            value: "{{ .Values.app.signature.policy }}"
          - name: PITSA_SIGN_SIGNATURE
            value: "{{ .Values.app.signature.signatureAlgorithmOid }}"
          - name: PITSA_SIGN_DIGEST
            value: "{{ .Values.app.signature.digestAlgorithmOid }}"
          - name: PITSA_SIGN_ENPROV
            value: "/secrets/enprov.json"
          - name: PITSA_CONTEXT_POD
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: PITSA_CONTEXT_SERVICE
            value: "{{ include "pitsa.fullname" . }}"
          - name: PITSA_CONTEXT_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          #- name: RUST_BACKTRACE
          #  value: "full"
          volumeMounts:
          - name: enprov-secret
            mountPath: "/secrets"
            readOnly: true
      volumes:
      - name: enprov-secret
        secret:
          secretName: "{{ include "pitsa.fullname" . }}-enprov"
          items:
          - key: enprov.json
            path: enprov.json
      {{- if .Values.ntp.enabled }}
      - name: tmpfs-etc-chrony
        emptyDir:
          medium: Memory
          sizeLimit: 1Mi
      - name: tmpfs-run-chrony
        emptyDir:
          medium: Memory
          sizeLimit: 1Mi
      - name: tmpfs-var-lib-chrony
        emptyDir:
          medium: Memory
          sizeLimit: 1Mi
      - name: tmpfs-the-ground-up
        emptyDir:
          medium: Memory
          sizeLimit: 256Mi
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
